{
	"info": {
		"_postman_id": "12345678-1234-1234-1234-123456789012",
		"name": "ITSS Portal Authentication API",
		"description": "Complete API collection for ITSS Portal Authentication Module with JWT authentication, user management, role management, and audit logging.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"testuser@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register a new user. User will be in PENDING status until approved."
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const jsonData = pm.response.json();",
									"    pm.environment.set('accessToken', jsonData.accessToken);",
									"    pm.environment.set('refreshToken', jsonData.refreshToken);",
									"    console.log('Tokens saved to environment');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"usernameOrEmail\": \"admin\",\n    \"password\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login with username/email and password. Returns access and refresh tokens."
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{refreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"refresh"
							]
						},
						"description": "Refresh access token using refresh token."
					},
					"response": []
				},
				{
					"name": "Invite User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"invited@example.com\",\n    \"roleId\": 2\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/invite?invitedBy=admin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"invite"
							],
							"query": [
								{
									"key": "invitedBy",
									"value": "admin"
								}
							]
						},
						"description": "Invite a user by email with a specific role."
					},
					"response": []
				},
				{
					"name": "Approve User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/approve/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"approve",
								"{{userId}}"
							]
						},
						"description": "Approve a pending user by ID."
					},
					"response": []
				},
				{
					"name": "Decline User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/decline/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"decline",
								"{{userId}}"
							]
						},
						"description": "Decline a pending user by ID."
					},
					"response": []
				},
				{
					"name": "Request Password Reset",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"testuser@example.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/reset-password-request",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"reset-password-request"
							]
						},
						"description": "Request password reset email."
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"reset-token-here\",\n    \"newPassword\": \"newpassword123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/reset-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"reset-password"
							]
						},
						"description": "Reset password using token from email."
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for user registration, login, token refresh, invitations, and password reset."
		},
		{
			"name": "User Management",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Retrieve all users. Requires VIEW_USERS permission."
					},
					"response": []
				},
				{
					"name": "Get Pending Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/pending",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"pending"
							]
						},
						"description": "Retrieve all pending users awaiting approval. Requires VIEW_USERS permission."
					},
					"response": []
				},
				{
					"name": "Get Blocked Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/blocked",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"blocked"
							]
						},
						"description": "Retrieve all blocked users. Requires VIEW_USERS permission."
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						},
						"description": "Retrieve a specific user by ID. Requires VIEW_USERS permission."
					},
					"response": []
				},
				{
					"name": "Block User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/block/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"block",
								"{{userId}}"
							]
						},
						"description": "Block a user by ID. Requires BLOCK_USER permission."
					},
					"response": []
				}
			],
			"description": "User management endpoints for viewing and blocking users."
		},
		{
			"name": "Role Management",
			"item": [
				{
					"name": "Create Role",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"MANAGER\",\n    \"description\": \"Manager role with moderate permissions\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles"
							]
						},
						"description": "Create a new role. Requires CREATE_ROLE permission."
					},
					"response": []
				},
				{
					"name": "Update Role",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"SENIOR_MANAGER\",\n    \"description\": \"Senior manager role with extended permissions\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/roles/{{roleId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								"{{roleId}}"
							]
						},
						"description": "Update an existing role by ID. Requires UPDATE_ROLE permission."
					},
					"response": []
				},
				{
					"name": "Delete Role",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/roles/{{roleId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								"{{roleId}}"
							]
						},
						"description": "Delete a role by ID. Requires DELETE_ROLE permission."
					},
					"response": []
				},
				{
					"name": "Get All Roles",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles"
							]
						},
						"description": "Retrieve all roles. Requires VIEW_ROLES permission."
					},
					"response": []
				},
				{
					"name": "Get Role by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/roles/{{roleId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								"{{roleId}}"
							]
						},
						"description": "Retrieve a specific role by ID. Requires VIEW_ROLES permission."
					},
					"response": []
				},
				{
					"name": "Assign Permissions to Role",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[1, 2, 3, 4]"
						},
						"url": {
							"raw": "{{baseUrl}}/roles/{{roleId}}/permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								"{{roleId}}",
								"permissions"
							]
						},
						"description": "Assign permissions to a role by providing an array of permission IDs. Requires ASSIGN_PERMISSIONS permission."
					},
					"response": []
				}
			],
			"description": "Role management endpoints for CRUD operations on roles and permission assignment."
		},
		{
			"name": "Audit Logs",
			"item": [
				{
					"name": "Get All Audit Logs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/audit-logs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"audit-logs"
							]
						},
						"description": "Retrieve all audit logs. Requires VIEW_AUDIT_LOGS permission."
					},
					"response": []
				},
				{
					"name": "Get Audit Logs by User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/audit-logs/user/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"audit-logs",
								"user",
								"{{userId}}"
							]
						},
						"description": "Retrieve audit logs for a specific user. Requires VIEW_AUDIT_LOGS permission."
					},
					"response": []
				}
			],
			"description": "Audit log endpoints for viewing system activity logs."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-refresh token if needed",
					"const accessToken = pm.environment.get('accessToken');",
					"const refreshToken = pm.environment.get('refreshToken');",
					"",
					"if (!accessToken && refreshToken) {",
					"    console.log('No access token found, but refresh token available');",
					"    // Could implement auto-refresh logic here",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global response logging",
					"console.log('Response Status:', pm.response.code);",
					"if (pm.response.code >= 400) {",
					"    console.log('Error Response:', pm.response.text());",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080/api",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "refreshToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "1",
			"type": "string"
		},
		{
			"key": "roleId",
			"value": "1",
			"type": "string"
		}
	]
} 