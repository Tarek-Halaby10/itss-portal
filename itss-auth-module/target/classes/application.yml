# application.yml - Place in: itss-auth-module/src/main/resources/
server:
  port: 8081
  servlet:
    context-path: /api

spring:
  application:
    name: itss-portal-auth
  
  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/itss_portal
    username: postgres
    password: P@ssw0rd
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      validation-timeout: 5000
      leak-detection-threshold: 60000
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
        jdbc_batch_versioned_data: true
  
  # Flyway Configuration
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
    clean-disabled: true
    
  # Mail Configuration
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:your-email@gmail.com}
    password: ${MAIL_PASSWORD:your-app-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 3000
          writetimeout: 5000
          
  # Thymeleaf Configuration (for email templates)
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    encoding: UTF-8
    cache: false

# JWT Configuration
jwt:
  secret: mySecretKey1234567890123456789012345678901234567890
  access-token-expiration: 86400000
  refresh-token-expiration: 604800000

# Application Configuration
app:
  name: ITSS Portal
  version: 1.00
  frontend-url: ${FRONTEND_URL:http://localhost:3000}
  invitation:
    expiration-hours: ${INVITATION_EXPIRATION_HOURS:72}  # 3 days
  password-reset:
    expiration-minutes: ${PASSWORD_RESET_EXPIRATION_MINUTES:30}  # 30 minutes

# Logging Configuration
logging:
  level:
    com.itss: ${LOG_LEVEL:INFO}
    org.springframework.security: ${SECURITY_LOG_LEVEL:INFO}
    org.hibernate.SQL: ${SQL_LOG_LEVEL:WARN}
    org.hibernate.type.descriptor.sql.BasicBinder: ${SQL_PARAMS_LOG_LEVEL:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/itss-portal.log
    max-size: 10MB
    max-history: 30

# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized
  info:
    env:
      enabled: true

# Springdoc OpenAPI Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
    disable-swagger-default-url: true
  show-actuator: false

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  
  # Development Database (H2 for quick testing)
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true

logging:
  level:
    com.itss: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

---
# Testing Profile
spring:
  config:
    activate:
      on-profile: test
      
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
    
  jpa:
    hibernate:
      ddl-auto: create-drop
      
  flyway:
    enabled: false
    
  mail:
    host: localhost
    port: 25
    
logging:
  level:
    com.itss: WARN
    org.springframework: WARN
    org.hibernate: WARN

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
      
  jpa:
    show-sql: false
    
  flyway:
    clean-disabled: true
    validate-on-migrate: true

logging:
  level:
    com.itss: INFO
    org.springframework: WARN
    org.hibernate: WARN
  file:
    name: /var/log/itss-portal/application.log